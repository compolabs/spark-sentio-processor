type Balance @entity {
  id: ID!
  user: String!
  market: String!
  liquidBaseAmount: BigInt!
  liquidQuoteAmount: BigInt!
  lockedBaseAmount: BigInt!
  lockedQuoteAmount: BigInt!
  tradeVolume: Float!
  timestamp: Int!
}

type TotalVolume @entity {
  id: ID!
  timestamp: Int!
  volume: Float!
}

type TotalMarketVolume @entity {
  id: ID!
  market: String!
  timestamp: Int!
  volume: Float!
}

type TradeEvent @entity {
  id: ID!
  market: String!
  timestamp: Int!
  volume: Float!
  seller: String!
  buyer: String!
}

type DailyVolume @entity {
  id: ID!
  timestamp: Int!
  volume: Float!
}

type DailyMarketVolume @entity {
  id: ID!
  market: String!
  timestamp: Int!
  volume: Float!
}

type UserScoreSnapshot @entity {
  id: ID!
  timestamp: Int!
  block_date: String!
  chain_id: Int!
  block_number: Int!
  user_address: String!
  pool_address: String!
  total_value_locked_score: Float!
  market_depth_score: Int
  tradeVolume: Float!
}

type Pools @entity {
  id: ID!
  chain_id: Int!
  creation_block_number: Int!
  timestamp: Int!
  pool_address: String!
  lp_token_address: String!
  lp_token_symbol: String!
  token_address: String!
  token_symbol: String!
  token_decimals: String!
  token_index: Int!
  fee_rate: Float!
  dex_type: String!
}

